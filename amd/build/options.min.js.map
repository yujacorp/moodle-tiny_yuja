{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * YuJa Plugin for Moodle Tiny\r\n * @package    tiny_yuja/options\r\n * @subpackage yuja\r\n * @copyright  2023 YuJa\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getPluginOptionName} from 'editor_tiny/options';\r\nimport {pluginName} from './common';\r\n\r\n// Helper variables for the option names.\r\nconst contextIdName = getPluginOptionName(pluginName, 'contextid');\r\n\r\n\r\n/**\r\n * Options registration function.\r\n *\r\n * @param {tinyMCE} editor\r\n */\r\nexport const register = (editor) => {\r\n    const registerOption = editor.options.register;\r\n\r\n    // For each option, register it with the editor.\r\n    // Valid type are defined in https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.editoroptions/\r\n    registerOption(contextIdName, {\r\n        processor: 'number',\r\n    });\r\n    registerOption(fpoptions, {\r\n        processor: 'array',\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch the contextId value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the myFirstProperty option\r\n */\r\nexport const getContextId = (editor) => editor.options.get(contextIdName);\r\nexport const getFpoptions = (editor) => editor.options.get(fpoptions)"],"names":["getPluginOptionName","pluginName","contextIdName","fpoptions","register","registerOption","editor","options","processor","getContextId","get","getFpoptions"],"mappings":"OAuBQA,mBAA+C,KAArB,6BAC1BC,UAA2B,KAAV,WAGzB,MAAMC,cAAgBF,oBAAoBC,WAAY,WAAW,EACjE,MAAME,UAAYH,oBAAoBC,WAAW,WAAW,SAOrD,MAAMG,SAAW,SACpB,MAAMC,eAAiBC,OAAOC,QAAQH,SAItCC,eAAeH,cAAe,CAC1BM,UAAW,QACf,CAAC,EACDH,eAAeF,UAAW,CACtBK,UAAW,OACf,CAAC,CACL,SAQO,MAAMC,aAAe,QAAYH,OAAOC,QAAQG,IAAIR,aAAa,SACjE,MAAMS,aAAe,QAAYL,OAAOC,QAAQG,IAAIP,SAAS"}